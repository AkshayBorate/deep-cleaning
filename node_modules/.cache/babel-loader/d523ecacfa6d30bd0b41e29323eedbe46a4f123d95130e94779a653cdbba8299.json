{"ast":null,"code":"var _jsxFileName = \"D:\\\\Varsha Deep Cleaner\\\\deep-cleaning\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './Login.css';\n\n// const Login = () => {\n//   const [isSignup, setIsSignup] = useState(false);\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     mobile: '',\n//     password: '',\n//     signinEmail: '',\n//     signinPassword: '',\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const toggleForm = () => {\n//     setIsSignup(!isSignup);\n//     setErrors({});\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value,\n//     });\n//   };\n\n//   const validateSignup = () => {\n//     const newErrors = {};\n\n//     // Name (First and Last) Validation\n//     if (!/^[A-Za-z]{2,}(?: [A-Za-z]{2,})+$/.test(formData.name)) {\n//       newErrors.name = 'Please enter your first and last name (at least 2 characters each)';\n//     }\n\n//     // Email Validation\n//     if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(formData.email)) {\n//       newErrors.email = 'Please enter a valid email address';\n//     }\n\n//     // Mobile Number Validation\n//     if (!/^\\d{10}$/.test(formData.mobile)) {\n//       newErrors.mobile = 'Mobile number must be exactly 10 digits';\n//     }\n\n//     // Password Validation\n//     if (!/^(?=.*[A-Za-z])(?=.*\\d).{8,}$/.test(formData.password)) {\n//       newErrors.password = 'Password must be at least 8 characters long and include at least one letter and one number';\n//     }\n\n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const validateSignin = () => {\n//     const newErrors = {};\n\n//     // Email Validation\n//     if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(formData.signinEmail)) {\n//       newErrors.signinEmail = 'Please enter a valid email address';\n//     }\n\n//     // Password Validation\n//     if (formData.signinPassword.length < 8) {\n//       newErrors.signinPassword = 'Password must be at least 8 characters long';\n//     }\n\n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleSignup = () => {\n//     if (validateSignup()) {\n//       alert('Signup successful!');\n//     }\n//   };\n\n//   const handleSignin = () => {\n//     if (validateSignin()) {\n//       alert('Signin successful!');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container login-body mt-5\">\n//       <div className={`login-container ${isSignup ? 'show-signup' : ''}`}>\n\n//         {/* Sign In Form */}\n//         <div className=\"login-form sign-in-form\">\n//           <h2 className='h2-stl mt-5'>Welcome</h2>\n//           <label className='label-stl'>\n//             <span className='span-stl'>Email</span>\n//             <input\n//               type=\"email\"\n//               name=\"signinEmail\"\n//               className='input-taking'\n//               value={formData.signinEmail}\n//               onChange={handleInputChange}\n//             />\n//             {errors.signinEmail && <p className=\"error-text\">{errors.signinEmail}</p>}\n//           </label>\n//           <label className='label-stl'>\n//             <span className='span-stl'>Password</span>\n//             <input\n//               type=\"password\"\n//               name=\"signinPassword\"\n//               className='input-taking'\n//               value={formData.signinPassword}\n//               onChange={handleInputChange}\n//             />\n//             {errors.signinPassword && <p className=\"error-text\">{errors.signinPassword}</p>}\n//           </label>\n//           <p className=\"forgot-password\">Forgot password?</p>\n//           <button type=\"button\" className=\"submit-btns stl-btns\" onClick={handleSignin}>Sign In</button>\n//         </div>\n\n//         {/* Sign Up Form */}\n//         <div className=\"form-toggle-section\">\n//           <div className=\"form-toggle-image\">\n//             <div className=\"form-toggle-text show-signup-text\">\n//               <h3 className='h3-stl'>Don't have an account? Please Sign up!</h3>\n//             </div>\n//             <div className=\"form-toggle-text show-signin-text\">\n//               <h3 className='h3-stl'>If you already have an account, just sign in.</h3>\n//             </div>\n//             <div className=\"form-toggle-btn\" onClick={toggleForm}>\n//               <span className=\"signup-label span-stl\">Sign Up</span>\n//               <span className=\"signin-label span-stl\">Sign In</span>\n//             </div>\n//           </div>\n\n//           <div className=\"signup-form\">\n//             <h2 className='h2-stl mt-lg-5'>Create your Account</h2>\n//             <label className='label-stl'>\n//               <span className='span-stl'>Full Name</span>\n//               <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 className='input-taking'\n//                 value={formData.name}\n//                 onChange={handleInputChange}\n//               />\n//               {errors.name && <p className=\"error-text\">{errors.name}</p>}\n//             </label>\n//             <label className='label-stl'>\n//               <span className='span-stl'>Email</span>\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 className='input-taking'\n//                 value={formData.email}\n//                 onChange={handleInputChange}\n//               />\n//               {errors.email && <p className=\"error-text\">{errors.email}</p>}\n//             </label>\n//             <label className='label-stl'>\n//               <span className='span-stl'>Mobile No</span>\n//               <input\n//                 type=\"text\"\n//                 name=\"mobile\"\n//                 className='input-taking'\n//                 value={formData.mobile}\n//                 onChange={handleInputChange}\n//               />\n//               {errors.mobile && <p className=\"error-text\">{errors.mobile}</p>}\n//             </label>\n//             <label className='label-stl'>\n//               <span className='span-stl'>Password</span>\n//               <input\n//                 type=\"password\"\n//                 name=\"password\"\n//                 className='input-taking'\n//                 value={formData.password}\n//                 onChange={handleInputChange}\n//               />\n//               {errors.password && <p className=\"error-text\">{errors.password}</p>}\n//             </label>\n//             <button type=\"button\" className=\"submit-btns stl-btns\" onClick={handleSignup}>Sign Up</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    mobile: \"\",\n    password: \"\",\n    signinEmail: \"\",\n    signinPassword: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const toggleForm = () => {\n    setIsSignup(!isSignup);\n    setErrors({});\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const validateSignup = () => {\n    const newErrors = {};\n\n    // Name (First and Last) Validation\n    if (!/^[A-Za-z]{2,}(?: [A-Za-z]{2,})+$/.test(formData.name)) {\n      newErrors.name = \"Please enter your first and last name (at least 2 characters each)\";\n    }\n\n    // Email Validation\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(formData.email)) {\n      newErrors.email = \"Please enter a valid email address\";\n    }\n\n    // Mobile Number Validation\n    if (!/^\\d{10}$/.test(formData.mobile)) {\n      newErrors.mobile = \"Mobile number must be exactly 10 digits\";\n    }\n\n    // Password Validation\n    if (!/^(?=.*[A-Za-z])(?=.*\\d).{8,}$/.test(formData.password)) {\n      newErrors.password = \"Password must be at least 8 characters long and include at least one letter and one number\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const validateSignin = () => {\n    const newErrors = {};\n\n    // Email Validation\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(formData.signinEmail)) {\n      newErrors.signinEmail = \"Please enter a valid email address\";\n    }\n\n    // Password Validation\n    if (formData.signinPassword.length < 8) {\n      newErrors.signinPassword = \"Password must be at least 8 characters long\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSignup = async () => {\n    if (validateSignup()) {\n      try {\n        const response = await fetch(\"http://localhost:7001/api/auth/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: formData.name,\n            email: formData.email,\n            mobile: formData.mobile,\n            password: formData.password\n          })\n        });\n        const result = await response.json();\n        if (response.ok) {\n          alert(result.message || \"Signup successful!\");\n          toggleForm(); // Switch to sign-in form\n          setFormData(prev => ({\n            ...prev,\n            name: \"\",\n            email: \"\",\n            mobile: \"\",\n            password: \"\"\n          }));\n        } else {\n          alert(result.message || \"Signup failed.\");\n        }\n      } catch (error) {\n        alert(\"Something went wrong during signup.\");\n        console.error(error);\n      }\n    }\n  };\n  // const handleSignin = async () => {\n  //   if (validateSignin()) {\n  //     try {\n  //       // const response = await fetch(\"http://localhost:7001/api/auth/login\", {\n  //       //   method: \"POST\",\n  //       //   headers: { \"Content-Type\": \"application/json\" },\n  //       //   body: JSON.stringify({\n  //       //     signinEmail: formData.signinEmail,\n  //       //     signinPassword: formData.signinPassword,\n  //       //   }),\n  //       // });\n  //       // const result = await response.json();\n  //       if (\n  //         formData.signinEmail === \"abhijeetshitole@21gmail.com\" &&\n  //         formData.signinPassword === \"Abhis@21\"\n  //       ) {\n  //         alert(\"Signin successful!\");\n  //         // localStorage.setItem(\"token\", result.token || \"hardcoded-token\"); // Optional token save\n  //         Navigate(\"/getdetails\");\n  //         return;\n  //       }\n  //       // if (response.ok) {\n  //       //   alert(\"Signin successful!\");\n  //       //   localStorage.setItem(\"token\", result.token);\n  //       //   // Redirect or update UI after successful login\n  //       // } else {\n  //       //   alert(result.message || \"Signin failed.\");\n  //       // }\n  //     } catch (error) {\n  //       alert(\"Something went wrong during signin.\");\n  //       console.error(error);\n  //     }\n  //   }\n  // };\n\n  const handleSignin = async () => {\n    if (validateSignin()) {\n      try {\n        if (formData.signinEmail === \"abhijeetshitole@21gmail.com\" && formData.signinPassword === \"Abhis@21\") {\n          alert(\"Signin successful!\");\n          // Navigate using the navigate function\n          navigate(\"/getdetails\");\n          return;\n        } else {\n          alert(\"Invalid email or password.\");\n        }\n      } catch (error) {\n        alert(\"Something went wrong during signin.\");\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container login-body mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login-container ${isSignup ? \"show-signup\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form sign-in-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"h2-stl mt-5\",\n          children: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-stl\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-stl\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"signinEmail\",\n            className: \"input-taking\",\n            value: formData.signinEmail,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), errors.signinEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: errors.signinEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-stl\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span-stl\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"signinPassword\",\n            className: \"input-taking\",\n            value: formData.signinPassword,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), errors.signinPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: errors.signinPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgot-password\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-btns stl-btns\",\n          onClick: handleSignin,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-toggle-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-toggle-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-toggle-text show-signup-text\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"h3-stl\",\n              children: \"Don't have an account? Please Sign up!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-toggle-text show-signin-text\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"h3-stl\",\n              children: \"If you already have an account, just sign in.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-toggle-btn\",\n            onClick: toggleForm,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"signup-label span-stl\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"signin-label span-stl\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"h2-stl mt-lg-5\",\n            children: \"Create your Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-stl\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span-stl\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              className: \"input-taking\",\n              value: formData.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-stl\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span-stl\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              className: \"input-taking\",\n              value: formData.email,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-stl\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span-stl\",\n              children: \"Mobile No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"mobile\",\n              className: \"input-taking\",\n              value: formData.mobile,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), errors.mobile && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: errors.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-stl\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span-stl\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              className: \"input-taking\",\n              value: formData.password,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"submit-btns stl-btns\",\n            onClick: handleSignup,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"VtaCELuDkWAQ98Ge5ZxawIy0KpE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Navigate","useNavigate","jsxDEV","_jsxDEV","Login","_s","isSignup","setIsSignup","formData","setFormData","name","email","mobile","password","signinEmail","signinPassword","errors","setErrors","navigate","toggleForm","handleInputChange","e","value","target","prev","validateSignup","newErrors","test","Object","keys","length","validateSignin","handleSignup","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","error","console","handleSignin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/Varsha Deep Cleaner/deep-cleaning/src/pages/Login/Login.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './Login.css';\r\n\r\n// const Login = () => {\r\n//   const [isSignup, setIsSignup] = useState(false);\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     mobile: '',\r\n//     password: '',\r\n//     signinEmail: '',\r\n//     signinPassword: '',\r\n//   });\r\n\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const toggleForm = () => {\r\n//     setIsSignup(!isSignup);\r\n//     setErrors({});\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const validateSignup = () => {\r\n//     const newErrors = {};\r\n\r\n//     // Name (First and Last) Validation\r\n//     if (!/^[A-Za-z]{2,}(?: [A-Za-z]{2,})+$/.test(formData.name)) {\r\n//       newErrors.name = 'Please enter your first and last name (at least 2 characters each)';\r\n//     }\r\n\r\n//     // Email Validation\r\n//     if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(formData.email)) {\r\n//       newErrors.email = 'Please enter a valid email address';\r\n//     }\r\n\r\n//     // Mobile Number Validation\r\n//     if (!/^\\d{10}$/.test(formData.mobile)) {\r\n//       newErrors.mobile = 'Mobile number must be exactly 10 digits';\r\n//     }\r\n\r\n//     // Password Validation\r\n//     if (!/^(?=.*[A-Za-z])(?=.*\\d).{8,}$/.test(formData.password)) {\r\n//       newErrors.password = 'Password must be at least 8 characters long and include at least one letter and one number';\r\n//     }\r\n\r\n//     setErrors(newErrors);\r\n//     return Object.keys(newErrors).length === 0;\r\n//   };\r\n\r\n//   const validateSignin = () => {\r\n//     const newErrors = {};\r\n\r\n//     // Email Validation\r\n//     if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(formData.signinEmail)) {\r\n//       newErrors.signinEmail = 'Please enter a valid email address';\r\n//     }\r\n\r\n//     // Password Validation\r\n//     if (formData.signinPassword.length < 8) {\r\n//       newErrors.signinPassword = 'Password must be at least 8 characters long';\r\n//     }\r\n\r\n//     setErrors(newErrors);\r\n//     return Object.keys(newErrors).length === 0;\r\n//   };\r\n\r\n//   const handleSignup = () => {\r\n//     if (validateSignup()) {\r\n//       alert('Signup successful!');\r\n//     }\r\n//   };\r\n\r\n//   const handleSignin = () => {\r\n//     if (validateSignin()) {\r\n//       alert('Signin successful!');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container login-body mt-5\">\r\n//       <div className={`login-container ${isSignup ? 'show-signup' : ''}`}>\r\n\r\n//         {/* Sign In Form */}\r\n//         <div className=\"login-form sign-in-form\">\r\n//           <h2 className='h2-stl mt-5'>Welcome</h2>\r\n//           <label className='label-stl'>\r\n//             <span className='span-stl'>Email</span>\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"signinEmail\"\r\n//               className='input-taking'\r\n//               value={formData.signinEmail}\r\n//               onChange={handleInputChange}\r\n//             />\r\n//             {errors.signinEmail && <p className=\"error-text\">{errors.signinEmail}</p>}\r\n//           </label>\r\n//           <label className='label-stl'>\r\n//             <span className='span-stl'>Password</span>\r\n//             <input\r\n//               type=\"password\"\r\n//               name=\"signinPassword\"\r\n//               className='input-taking'\r\n//               value={formData.signinPassword}\r\n//               onChange={handleInputChange}\r\n//             />\r\n//             {errors.signinPassword && <p className=\"error-text\">{errors.signinPassword}</p>}\r\n//           </label>\r\n//           <p className=\"forgot-password\">Forgot password?</p>\r\n//           <button type=\"button\" className=\"submit-btns stl-btns\" onClick={handleSignin}>Sign In</button>\r\n//         </div>\r\n\r\n//         {/* Sign Up Form */}\r\n//         <div className=\"form-toggle-section\">\r\n//           <div className=\"form-toggle-image\">\r\n//             <div className=\"form-toggle-text show-signup-text\">\r\n//               <h3 className='h3-stl'>Don't have an account? Please Sign up!</h3>\r\n//             </div>\r\n//             <div className=\"form-toggle-text show-signin-text\">\r\n//               <h3 className='h3-stl'>If you already have an account, just sign in.</h3>\r\n//             </div>\r\n//             <div className=\"form-toggle-btn\" onClick={toggleForm}>\r\n//               <span className=\"signup-label span-stl\">Sign Up</span>\r\n//               <span className=\"signin-label span-stl\">Sign In</span>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"signup-form\">\r\n//             <h2 className='h2-stl mt-lg-5'>Create your Account</h2>\r\n//             <label className='label-stl'>\r\n//               <span className='span-stl'>Full Name</span>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 className='input-taking'\r\n//                 value={formData.name}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//               {errors.name && <p className=\"error-text\">{errors.name}</p>}\r\n//             </label>\r\n//             <label className='label-stl'>\r\n//               <span className='span-stl'>Email</span>\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 className='input-taking'\r\n//                 value={formData.email}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//               {errors.email && <p className=\"error-text\">{errors.email}</p>}\r\n//             </label>\r\n//             <label className='label-stl'>\r\n//               <span className='span-stl'>Mobile No</span>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"mobile\"\r\n//                 className='input-taking'\r\n//                 value={formData.mobile}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//               {errors.mobile && <p className=\"error-text\">{errors.mobile}</p>}\r\n//             </label>\r\n//             <label className='label-stl'>\r\n//               <span className='span-stl'>Password</span>\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 className='input-taking'\r\n//                 value={formData.password}\r\n//                 onChange={handleInputChange}\r\n//               />\r\n//               {errors.password && <p className=\"error-text\">{errors.password}</p>}\r\n//             </label>\r\n//             <button type=\"button\" className=\"submit-btns stl-btns\" onClick={handleSignup}>Sign Up</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    password: \"\",\r\n    signinEmail: \"\",\r\n    signinPassword: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const toggleForm = () => {\r\n    setIsSignup(!isSignup);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const validateSignup = () => {\r\n    const newErrors = {};\r\n\r\n    // Name (First and Last) Validation\r\n    if (!/^[A-Za-z]{2,}(?: [A-Za-z]{2,})+$/.test(formData.name)) {\r\n      newErrors.name =\r\n        \"Please enter your first and last name (at least 2 characters each)\";\r\n    }\r\n\r\n    // Email Validation\r\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(formData.email)) {\r\n      newErrors.email = \"Please enter a valid email address\";\r\n    }\r\n\r\n    // Mobile Number Validation\r\n    if (!/^\\d{10}$/.test(formData.mobile)) {\r\n      newErrors.mobile = \"Mobile number must be exactly 10 digits\";\r\n    }\r\n\r\n    // Password Validation\r\n    if (!/^(?=.*[A-Za-z])(?=.*\\d).{8,}$/.test(formData.password)) {\r\n      newErrors.password =\r\n        \"Password must be at least 8 characters long and include at least one letter and one number\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const validateSignin = () => {\r\n    const newErrors = {};\r\n\r\n    // Email Validation\r\n    if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(formData.signinEmail)) {\r\n      newErrors.signinEmail = \"Please enter a valid email address\";\r\n    }\r\n\r\n    // Password Validation\r\n    if (formData.signinPassword.length < 8) {\r\n      newErrors.signinPassword = \"Password must be at least 8 characters long\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSignup = async () => {\r\n    if (validateSignup()) {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:7001/api/auth/register\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              name: formData.name,\r\n              email: formData.email,\r\n              mobile: formData.mobile,\r\n              password: formData.password,\r\n            }),\r\n          }\r\n        );\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert(result.message || \"Signup successful!\");\r\n          toggleForm(); // Switch to sign-in form\r\n          setFormData((prev) => ({\r\n            ...prev,\r\n            name: \"\",\r\n            email: \"\",\r\n            mobile: \"\",\r\n            password: \"\",\r\n          }));\r\n        } else {\r\n          alert(result.message || \"Signup failed.\");\r\n        }\r\n      } catch (error) {\r\n        alert(\"Something went wrong during signup.\");\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n  // const handleSignin = async () => {\r\n  //   if (validateSignin()) {\r\n  //     try {\r\n  //       // const response = await fetch(\"http://localhost:7001/api/auth/login\", {\r\n  //       //   method: \"POST\",\r\n  //       //   headers: { \"Content-Type\": \"application/json\" },\r\n  //       //   body: JSON.stringify({\r\n  //       //     signinEmail: formData.signinEmail,\r\n  //       //     signinPassword: formData.signinPassword,\r\n  //       //   }),\r\n  //       // });\r\n  //       // const result = await response.json();\r\n  //       if (\r\n  //         formData.signinEmail === \"abhijeetshitole@21gmail.com\" &&\r\n  //         formData.signinPassword === \"Abhis@21\"\r\n  //       ) {\r\n  //         alert(\"Signin successful!\");\r\n  //         // localStorage.setItem(\"token\", result.token || \"hardcoded-token\"); // Optional token save\r\n  //         Navigate(\"/getdetails\");\r\n  //         return;\r\n  //       }\r\n  //       // if (response.ok) {\r\n  //       //   alert(\"Signin successful!\");\r\n  //       //   localStorage.setItem(\"token\", result.token);\r\n  //       //   // Redirect or update UI after successful login\r\n  //       // } else {\r\n  //       //   alert(result.message || \"Signin failed.\");\r\n  //       // }\r\n  //     } catch (error) {\r\n  //       alert(\"Something went wrong during signin.\");\r\n  //       console.error(error);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const handleSignin = async () => {\r\n    if (validateSignin()) {\r\n      try {\r\n        if (\r\n          formData.signinEmail === \"abhijeetshitole@21gmail.com\" &&\r\n          formData.signinPassword === \"Abhis@21\"\r\n        ) {\r\n          alert(\"Signin successful!\");\r\n          // Navigate using the navigate function\r\n          navigate(\"/getdetails\");\r\n          return;\r\n        } else {\r\n          alert(\"Invalid email or password.\");\r\n        }\r\n      } catch (error) {\r\n        alert(\"Something went wrong during signin.\");\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container login-body mt-5\">\r\n      <div className={`login-container ${isSignup ? \"show-signup\" : \"\"}`}>\r\n        {/* Sign In Form */}\r\n        <div className=\"login-form sign-in-form\">\r\n          <h2 className=\"h2-stl mt-5\">Welcome</h2>\r\n          <label className=\"label-stl\">\r\n            <span className=\"span-stl\">Email</span>\r\n            <input\r\n              type=\"email\"\r\n              name=\"signinEmail\"\r\n              className=\"input-taking\"\r\n              value={formData.signinEmail}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.signinEmail && (\r\n              <p className=\"error-text\">{errors.signinEmail}</p>\r\n            )}\r\n          </label>\r\n          <label className=\"label-stl\">\r\n            <span className=\"span-stl\">Password</span>\r\n            <input\r\n              type=\"password\"\r\n              name=\"signinPassword\"\r\n              className=\"input-taking\"\r\n              value={formData.signinPassword}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.signinPassword && (\r\n              <p className=\"error-text\">{errors.signinPassword}</p>\r\n            )}\r\n          </label>\r\n          <p className=\"forgot-password\">Forgot password?</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"submit-btns stl-btns\"\r\n            onClick={handleSignin}\r\n          >\r\n            Sign In\r\n          </button>\r\n        </div>\r\n\r\n        {/* Sign Up Form */}\r\n        <div className=\"form-toggle-section\">\r\n          <div className=\"form-toggle-image\">\r\n            <div className=\"form-toggle-text show-signup-text\">\r\n              <h3 className=\"h3-stl\">Don't have an account? Please Sign up!</h3>\r\n            </div>\r\n            <div className=\"form-toggle-text show-signin-text\">\r\n              <h3 className=\"h3-stl\">\r\n                If you already have an account, just sign in.\r\n              </h3>\r\n            </div>\r\n            <div className=\"form-toggle-btn\" onClick={toggleForm}>\r\n              <span className=\"signup-label span-stl\">Sign Up</span>\r\n              <span className=\"signin-label span-stl\">Sign In</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"signup-form\">\r\n            <h2 className=\"h2-stl mt-lg-5\">Create your Account</h2>\r\n            <label className=\"label-stl\">\r\n              <span className=\"span-stl\">Full Name</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"input-taking\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n              />\r\n              {errors.name && <p className=\"error-text\">{errors.name}</p>}\r\n            </label>\r\n            <label className=\"label-stl\">\r\n              <span className=\"span-stl\">Email</span>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                className=\"input-taking\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n              />\r\n              {errors.email && <p className=\"error-text\">{errors.email}</p>}\r\n            </label>\r\n            <label className=\"label-stl\">\r\n              <span className=\"span-stl\">Mobile No</span>\r\n              <input\r\n                type=\"text\"\r\n                name=\"mobile\"\r\n                className=\"input-taking\"\r\n                value={formData.mobile}\r\n                onChange={handleInputChange}\r\n              />\r\n              {errors.mobile && <p className=\"error-text\">{errors.mobile}</p>}\r\n            </label>\r\n            <label className=\"label-stl\">\r\n              <span className=\"span-stl\">Password</span>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"input-taking\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n              />\r\n              {errors.password && (\r\n                <p className=\"error-text\">{errors.password}</p>\r\n              )}\r\n            </label>\r\n            <button\r\n              type=\"button\"\r\n              className=\"submit-btns stl-btns\"\r\n              onClick={handleSignup}\r\n            >\r\n              Sign Up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
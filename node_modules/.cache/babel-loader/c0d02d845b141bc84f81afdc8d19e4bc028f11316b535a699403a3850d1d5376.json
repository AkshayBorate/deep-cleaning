{"ast":null,"code":"var _jsxFileName = \"D:\\\\Varsha Deep Cleaner\\\\deep-cleaning\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { RouterProvider } from 'react-router-dom';\nimport routing from './routing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cors = require('cors');\napp.use(cors({\n  origin: 'http://localhost:3000',\n  credentials: true // if you're using cookies or authorization headers\n}));\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(RouterProvider, {\n  router: routing\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","RouterProvider","routing","jsxDEV","_jsxDEV","cors","require","app","use","origin","credentials","root","createRoot","document","getElementById","render","router","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Varsha Deep Cleaner/deep-cleaning/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { RouterProvider } from 'react-router-dom'; \nimport routing from './routing';\nconst cors = require('cors');\n\napp.use(cors({\n  origin: 'http://localhost:3000',\n  credentials: true // if you're using cookies or authorization headers\n}));\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"))\nroot.render(\n  <RouterProvider router={routing}/>\n)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5BC,GAAG,CAACC,GAAG,CAACH,IAAI,CAAC;EACXI,MAAM,EAAE,uBAAuB;EAC/BC,WAAW,EAAE,IAAI,CAAC;AACpB,CAAC,CAAC,CAAC;AAEH,MAAMC,IAAI,GAAGX,QAAQ,CAACY,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTX,OAAA,CAACH,cAAc;EAACe,MAAM,EAAEd;AAAQ;EAAAe,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAC,CACnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}